---
# @meta description: >
# Requires [Vault](../../vault/) to be run in order to use consul secret engine
#
# - Generate initial gossip encryption key and configure in agent config
# @end

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- name: Ensure local directory empty
  run_once: true
  delegate_to: localhost
  become: false
  ansible.builtin.file:
    path: /tmp/consul/configure/local.keyring
    state: absent

- name: Check if keyring file exists
  run_once: true
  delegate_to: "{{ groups.consul_servers[0] }}"
  ansible.builtin.stat:
    path: /var/lib/consul/serf/local.keyring
  register: keyring_file_exists

- name: Get keyring if exists
  run_once: true
  delegate_to: "{{ groups.consul_servers[0] }}"
  when: keyring_file_exists.stat.exists
  ansible.builtin.fetch:
    src: /var/lib/consul/serf/local.keyring
    dest: /tmp/consul/configure/local.keyring
    flat: true

- name: Copy keyring file to all agents
  when: keyring_file_exists.stat.exists
  ansible.builtin.copy:
    src: /tmp/consul/configure/local.keyring
    dest: /var/lib/consul/serf/local.keyring
    owner: consul
    group: consul
    mode: "0600"
  register: keyring_file_updated

- name: Restart Consul if keyring updated
  when: keyring_file_updated.changed
  ansible.builtin.service:
    name: consul
    state: restarted

- name: Wait if consul restarted
  when: keyring_file_updated.changed
  ansible.builtin.pause:
    seconds: 10

- run_once: true
  delegate_to: localhost
  become: false
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  block:
    - name: Ensure working directory
      ansible.builtin.file:
        path: /tmp/consul/gossip
        state: directory

    - name: Ensure vault kv2 is enabled
      ansible.builtin.command: |
        vault secrets enable -version 2 -path kv2 kv
      register: enable_kv2_out
      failed_when: enable_kv2_out.rc != 0 and 'path is already in use' not in enable_kv2_out.stderr

    - name: Generate gossip encryption key
      ansible.builtin.command: consul keygen
      register: gossip_key_out

    - ansible.builtin.set_fact:
        gossip_key: "{{ gossip_key_out.stdout }}"

    - name: Save gossip key to vault
      ansible.builtin.command: |
        vault kv put -mount=kv2 /consul/config/encryption \
          key={{ gossip_key }}

- name: Copy gossip configuration
  ansible.builtin.template:
    src: gossip.hcl.j2
    dest: "{{ consul.config_dir }}/gossip.hcl"
    owner: consul
    group: consul
    mode: "440"
  notify: Consul Restarted
