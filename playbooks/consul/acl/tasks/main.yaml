---
# @meta description: >
# Requires [Vault](../../vault/) to be run in order to use consul secret engine
#
# - Manually bootstrap ACL after configuration and save bootstrap token to Vault
# - Enable [consul secret engine](https://developer.hashicorp.com/vault/docs/secrets/consul) on Vault
# - Register Vault to Consul
# - Create and configure Consul server and agent roles
# @end

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- name: Ensure consul config directory
  ansible.builtin.file:
    path: "{{ consul.config_dir }}"
    state: directory
    owner: consul
    group: consul
    mode: 0775

- name: Prepare Consul ACL policies and tokens on Vault
  run_once: true
  delegate_to: localhost
  become: false
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
    CONSUL_HTTP_ADDR: "{{ consul.url }}"
  block:
    - name: Ensure kv secret engine is enabled on vault
      ansible.builtin.command: |
        vault secrets enable -path=kv2 -version=2 kv
      register: enable_kv2_out
      failed_when: enable_kv2_out.rc != 0 and 'path is already in use' not in enable_kv2_out.stderr

    - name: Manually initialize ACL on consul server
      ansible.builtin.pause:
        prompt: Login to one consul server and run 'consul acl bootstrap' save SecretID as 'token' to '/root/consul/bootstrap_token'

    - name: Get consul bootstrap token from vault
      ansible.builtin.command: |
        vault kv get -mount=kv2 -field=token \
          /root/consul/bootstrap_token
      register: bootstrap_token_out

    - name: Ensure consul secret engine is enabled on vault
      ansible.builtin.command: |
        vault secrets enable -path=consul consul
      register: enable_consul_out
      failed_when: enable_consul_out.rc != 0 and 'path is already in use' not in enable_consul_out.stderr

    - name: Configure consul secret engine
      ansible.builtin.command: |
        vault write consul/config/access \
          address={{ localhost_ip }}:{{ consul.ports.http }} \
          token={{ bootstrap_token_out.stdout }}
      register: configure_consul_secret_engine_out
      failed_when: configure_consul_secret_engine_out.rc != 0 and 'no longer allowed' not in configure_consul_secret_engine_out.stderr

    - name: Create global management role
      ansible.builtin.command: |
        vault write consul/roles/global_management_role \
          policies=global-management

    - name: Get management token
      ansible.builtin.command: |
        vault read -field=token consul/creds/global_management_role
      register: management_token_out

    - ansible.builtin.set_fact:
        management_token: "{{ management_token_out.stdout }}"

    - name: Ensure working directory
      ansible.builtin.file:
        path: /tmp/consul/acl
        state: directory

    # task sets variable as {{ item }}_token, e.g. "consul_server_token"
    - ansible.builtin.include_tasks: create-consul-policy-and-vault-role.yaml
      with_items:
        - consul_server
        - consul_client
        - consul_default_dns
        - nomad_server
        - nomad_client
        - vault_register

- name: Copy consul service registration config to Vault
  ansible.builtin.template:
    src: vault_consul.hcl.j2
    dest: "{{ vault.config_dir }}/consul.hcl"
    owner: vault
    group: vault
    mode: "664"
  when: inventory_hostname in groups.vault
  notify: Vault Restarted

- name: Copy server ACL configuration
  ansible.builtin.template:
    src: server.acl.hcl.j2
    dest: "{{ consul.config_dir }}/server.acl.hcl"
    owner: consul
    group: consul
    mode: "664"
  register: copy_server_acl_config_out
  when: inventory_hostname in groups.consul_servers

- name: Restart consul service
  throttle: 2
  ansible.builtin.service:
    name: consul
    state: restarted
  when: inventory_hostname in groups.consul_servers

- name: Wait
  ansible.builtin.pause:
    seconds: 20

- name: Copy client ACL configuration
  ansible.builtin.template:
    src: client.acl.hcl.j2
    dest: "{{ consul.config_dir }}/client.acl.hcl"
    owner: consul
    group: consul
    mode: 0664
  when: inventory_hostname in groups.consul_clients

- name: Restart consul service
  throttle: 2
  ansible.builtin.service:
    name: consul
    state: restarted
  when: inventory_hostname in groups.consul_clients
