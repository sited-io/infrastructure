---
- name: Check if '{{ item.name }}' application exists
  ansible.builtin.uri:
    url: "https://{{ zitadel.domain }}/management/v1/projects/{{ main_project_id }}/apps/_search"
    method: POST
    headers:
      authorization: "Bearer {{ access_token }}"
      content-type: application/json
    body_format: json
    body:
      queries:
        - nameQuery:
            name: "{{ item.name }}"
  register: search_app_out

- name: Create '{{ item.name }}' application
  ansible.builtin.uri:
    url: "https://{{ zitadel.domain }}/management/v1/projects/{{ main_project_id }}/apps/oidc"
    method: POST
    headers:
      authorization: "Bearer {{ access_token }}"
      content-type: application/json
    body_format: json
    body:
      name: "{{ item.name }}"
      redirectUris: "{{ item.redirect_uris }}"
      postLogoutRedirectUris: "{{ item.post_logout_redirect_uris }}"
      responseTypes:
        - OIDC_RESPONSE_TYPE_CODE
      grantTypes:
        - OIDC_GRANT_TYPE_AUTHORIZATION_CODE
        - OIDC_GRANT_TYPE_REFRESH_TOKEN
      appType: OIDC_APP_TYPE_WEB
      authMethodType: OIDC_AUTH_METHOD_TYPE_NONE
      accessTokenType: OIDC_TOKEN_TYPE_JWT
      devMode: "{{ item.dev_mode }}"
  when: search_app_out.json.result is undefined

- ansible.builtin.set_fact:
    app_id: "{{ search_app_out.json.result[0].id }}"
  when: search_app_out.json.result is not undefined

- name: Update '{{ item.name }}' application OIDC config
  ansible.builtin.uri:
    url: "https://{{ zitadel.domain }}/management/v1/projects/{{ main_project_id }}/apps/{{ app_id }}/oidc_config"
    method: PUT
    headers:
      authorization: "Bearer {{ access_token }}"
      content-type: application/json
    body_format: json
    body:
      redirectUris: "{{ item.redirect_uris }}"
      postLogoutRedirectUris: "{{ item.post_logout_redirect_uris }}"
      responseTypes:
        - OIDC_RESPONSE_TYPE_CODE
      grantTypes:
        - OIDC_GRANT_TYPE_AUTHORIZATION_CODE
        - OIDC_GRANT_TYPE_REFRESH_TOKEN
      authMethodType: OIDC_AUTH_METHOD_TYPE_NONE
      accessTokenType: OIDC_TOKEN_TYPE_JWT
      devMode: "{{ item.dev_mode }}"
  register: update_app_out
  failed_when: update_app_out.failed and update_app_out.json.details[0].message != "No changes"
  when: search_app_out.json.result is not undefined
