job "zitadel-setup" {
  datacenters = ["{{ data_center }}"]
  type = "batch"

  group "zitadel-setup" {
    network {
      mode = "bridge"
    }

    service {
      name = "zitadel-setup"
      
      connect {
        sidecar_service {
          proxy {
            upstreams {
              destination_name = "postgres-sql"
              local_bind_port = {{ postgres.ports.sql }}
            }
          }
        }
      }
    }

    task "zitadel-setup" {
      driver = "docker"

      vault {
        policies = ["zitadel"]
      }

      template {
        destination = "${NOMAD_SECRETS_DIR}/.env"
        env = true
        change_mode = "restart"
        left_delimiter = "[["
        right_delimiter = "]]"
        data = <<EOF
ZITADEL_MASTERKEY=[[ with secret "kv2/data/zitadel/master_key" ]][[ .Data.data.key ]][[ end ]]
EOF
      }

      template {
        destination = "${NOMAD_SECRETS_DIR}/steps.yaml"
        left_delimiter = "[["
        right_delimiter = "]]"
        data = <<EOF
FirstInstance:
  Org:
    Name: '{{ domain }}'
    Human:
      Username: '[[ with secret "kv2/data/zitadel/users/admin" ]][[ .Data.data.username ]][[ end ]]'
      Password: '[[ with secret "kv2/data/zitadel/users/admin" ]][[ .Data.data.password ]][[ end ]]'
      Email:
        Address: '[[ with secret "kv2/data/zitadel/users/admin" ]][[ .Data.data.username ]][[ end ]]'
        Verified: true
  SMTPConfiguration:
    SMTP:
      Host: '{{ zitadel.smtp.host }}'
      User: '[[ with secret "kv2/data/zitadel/smtp" ]][[ .Data.data.username ]][[ end ]]'
      Password: '[[ with secret "kv2/data/zitadel/smtp" ]][[ .Data.data.password ]][[ end ]]'
    TLS: true
    From: '{{ zitadel.smtp.from }}'
    FromName: '{{ zitadel.smtp.from }}'
EOF
      }

      template {
        destination = "${NOMAD_SECRETS_DIR}/config.yaml"
        left_delimiter = "[["
        right_delimiter = "]]"
        change_mode = "noop"
        data = <<EOF
Log:
  Level: 'debug'

ExternalSecure: true
ExternalDomain: {{ zitadel.domain }}
ExternalPort: 443

DefaultInstance:
  SMTPConfiguration:
    SMTP:
      Host: '{{ zitadel.smtp.host }}'
      User: '[[ with secret "kv2/data/zitadel/smtp" ]][[ .Data.data.username ]][[ end ]]'
      Password: '[[ with secret "kv2/data/zitadel/smtp" ]][[ .Data.data.password ]][[ end ]]'
    From: '{{ zitadel.smtp.from }}'
    FromName: '{{ zitadel.smtp.from }}'

Database:
  postgres:
    Host: [[ env "NOMAD_UPSTREAM_IP_cockroach-sql" ]]
    Port: [[ env "NOMAD_UPSTREAM_PORT_cockroach-sql" ]]
    Database: zitadel
    MaxOpenConns: 15
    MaxIdleConns: 10
    MaxConnLifetime: 1h
    MaxConnIdleTime: 5m
    Options:
    User:
      Username: zitadel_user
      Password: "[[ with secret "database/static-creds/zitadel_user" ]][[ .Data.password ]][[ end ]]"
      SSL:
        Mode: disable
EOF
      }

      config {
        image = "ghcr.io/zitadel/zitadel:{{ zitadel.version }}"

        command = "setup"

        args = [
          "--masterkeyFromEnv",
          "--steps",
          "${NOMAD_SECRETS_DIR}/steps.yaml",
          "--config",
          "${NOMAD_SECRETS_DIR}/config.yaml",
        ]
      }
    }
  }
}