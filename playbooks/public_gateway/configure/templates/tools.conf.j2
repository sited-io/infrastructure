{% if 'vault' in groups %}
upstream vault_backends {
{% for ip in (groups.vault | map('extract', hostvars, ['ansible_eth1', 'ipv4', 'address'])) %}
  server {{ ip }}:{{ vault.ports.https }};
{% endfor %}
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name {{ vault.ui_host }};

  ssl_certificate {{ public_gateway.config_dir }}/origin.pem;
  ssl_certificate_key {{ public_gateway.config_dir }}/origin.key;

  location / {
    proxy_pass https://vault_backends;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
{% endif %}

{% if 'consul_servers' in groups %}
upstream consul_backends {
{% for ip in (groups.consul_servers | map('extract', hostvars, ['ansible_eth1', 'ipv4', 'address'])) %}
  server {{ ip }}:{{ consul.ports.https }};
{% endfor %}
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name {{ consul.ui_host }};

  ssl_certificate {{ public_gateway.config_dir }}/origin.pem;
  ssl_certificate_key {{ public_gateway.config_dir }}/origin.key;

  location / {
    proxy_pass https://consul_backends;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
{% endif %}

{% if 'nomad_servers' in groups %}
upstream nomad_backends {
{% for ip in (groups.nomad_servers | map('extract', hostvars, ['ansible_eth1', 'ipv4', 'address'])) %}
  server {{ ip }}:{{ nomad.ports.http }};
{% endfor %}
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name {{ nomad.ui_host }};

  ssl_certificate {{ public_gateway.config_dir }}/origin.pem;
  ssl_certificate_key {{ public_gateway.config_dir }}/origin.key;

  location / {
    proxy_pass https://nomad_backends;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
{% endif %}

