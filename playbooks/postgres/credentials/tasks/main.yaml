---
# @meta description: >
# Requires [Vault](../../vault/) to be run
#
# - Enable and configure [database secret engine](https://developer.hashicorp.com/vault/docs/secrets/databases) on Vault
# - Create management and service roles and users for postgres db
# @end

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- run_once: true
  delegate_to: localhost
  become: false
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  block:
    - name: Ensure working directory
      ansible.builtin.file:
        path: /tmp/postgres/credentials
        state: directory

    - name: Ensure database secret engine is enabled on vault
      ansible.builtin.command: |
        vault secrets enable -path=database database
      register: enable_database_se_out
      failed_when: enable_database_se_out.rc != 0 and 'path is already in use' not in enable_database_se_out.stderr

    - name: Copy postgres database config vault policy to working directory
      ansible.builtin.copy:
        src: configure-postgres-database.policy.hcl
        dest: /tmp/postgres/credentials/configure-postgres-database.policy.hcl

    - name: Ensure policy on vault
      ansible.builtin.command: |
        vault policy write configure-postgres-database \
          /tmp/postgres/credentials/configure-postgres-database.policy.hcl

    - name: Get token from vault
      ansible.builtin.command: |
        vault token create -field=token \
          -policy=configure-postgres-database \
          -period=48h
      register: vault_token_out

- when: inventory_hostname in groups.vault
  become: true
  block:
    - ansible.builtin.import_tasks: ../../common-tasks/consul-template/consul-template.yaml

    - ansible.builtin.service:
        name: consul-template@postgres_database_secrets_ctmpl.service
        state: stopped
        enabled: false
        daemon_reload: true

    - name: Ensure vault database directory
      ansible.builtin.file:
        path: "/opt/vault/database"
        state: directory

    - name: Copy database secret engine config template
      ansible.builtin.template:
        src: configure-postgres-database.json.tpl.j2
        dest: "{{ consul_template.data_dir }}/configure-postgres-database.json.tpl"
        owner: root
        group: root
        mode: "440"
      register: config_out_1

    - name: Copy Vault token to token directory
      ansible.builtin.copy:
        content: "{{ vault_token_out.stdout }}"
        dest: "{{ consul_template.token_dir }}/vault/.configure_postgres_database"
        owner: root
        group: root
        mode: "440"
      register: config_out_2

    - name: Copy database configuration script
      ansible.builtin.template:
        src: configure-postgres-database.sh.j2
        dest: /opt/vault/database/configure-postgres-database.sh
        owner: root
        group: root
        mode: "550"
      register: config_out_3

    - name: Copy database secret engine consul-template config file
      ansible.builtin.template:
        src: configure_postgres_database_ctmpl.hcl.j2
        dest: "{{ consul_template.config_dir }}/configure_postgres_database_ctmpl.hcl"
        owner: root
        group: root
        mode: "440"
      register: config_out_4

    - name: Restart consul-template service
      ansible.builtin.service:
        name: consul-template@configure_postgres_database_ctmpl.service
        state: restarted
        enabled: true
      when: config_out_1.changed or config_out_2.changed or config_out_3.changed or config_out_4.changed
