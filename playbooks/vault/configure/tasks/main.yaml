---
# @meta description: >
# Requires [provisioning](../../../provisioning/) to be run or KMS keyring to be set up on GCP.
#
# Configure Vault
# - Configure Vault with raft storage and auto unseal using [GCP KMS](https://cloud.google.com/security-key-management)
# @end

- name: Ensure vault config dir
  ansible.builtin.file:
    path: "{{ vault.config_dir }}"
    state: directory
  notify: Vault Reloaded

- name: Ensure certificate directory
  ansible.builtin.file:
    path: "{{ vault.certs_dir }}"
    state: directory
    mode: 0775
  notify: Vault Reloaded

- name: Copy CA certificate
  ansible.builtin.copy:
    content: "{{ secrets.vault.ssl_ca_certificate.replace('\\n', '\n') }}"
    dest: "{{ vault.certs_dir }}/ca.crt"
    owner: root
    group: root
    mode: 0644
  notify: Vault Reloaded

- name: Copy vault certificate
  ansible.builtin.copy:
    content: "{{ secrets.vault.ssl_certificate_key.replace('\\n', '\n') }}"
    dest: "{{ vault.certs_dir }}/client.key"
    owner: root
    group: root
    mode: 0644
  notify: Vault Reloaded

- name: Copy vault certificate key
  ansible.builtin.copy:
    content: "{{ secrets.vault.ssl_certificate.replace('\\n', '\n') }}"
    dest: "{{ vault.certs_dir }}/client.crt"
    owner: root
    group: vault
    mode: 0640
  notify: Vault Reloaded

- name: Copy vault config file
  ansible.builtin.template:
    src: vault.hcl.j2
    dest: "{{ vault.config_dir }}/vault.hcl"
    owner: vault
    group: vault
    mode: 0664
  notify: Vault Restarted

# save token as "secrets.vault.initial_root_token"
- when: secrets.vault.initial_root_token == ""
  block:
    - name: Restart Vault
      ansible.builtin.service:
        name: vault
        state: restarted

    - name: "End play if vault was not initialized"
      debug:
        msg: "Login to one vault server and run the init comman. Save restore keys to secrets file. Save initial root token to 'secrets.vault.initial_root_token'."

    - fail:
